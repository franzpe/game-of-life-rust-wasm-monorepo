{"version":3,"file":"static/js/660.206c6128.chunk.js","mappings":"qPAAA,SAASA,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,EAChD,CACF,C,yGCNA,IAEIO,EAAoB,IAFoB,qBAAhBC,aAA8B,EAAIC,EAAOC,SAAS,QAAQF,YAAcA,aAE3D,QAAS,CAAEG,WAAW,EAAMC,OAAO,IAE5EL,EAAkBM,SAElB,IAAIC,EAAqB,IAAIC,WAS7B,SAASC,EAAmBC,EAAKC,GAC7B,OAAOX,EAAkBM,QAPa,IAAlCC,EAAmBK,aACnBL,EAAqB,IAAIC,WAAWK,EAAAA,OAAAA,SAEjCN,GAI2CO,SAASJ,EAAKA,EAAMC,GACzE,CAED,SAASI,EAAWC,GAChB,GAAkB,kBAAPA,EAAiB,MAAM,IAAIC,MAAM,6BAC/C,CAED,IAAIC,EAAqB,IAAIC,WAE7B,SAASC,IAIL,OAHsC,IAAlCF,EAAmBN,aACnBM,EAAqB,IAAIC,WAAWN,EAAAA,OAAAA,SAEjCK,CACV,CAGM,IAAMG,EAAOxB,OAAOyB,OAAO,CAAEC,KAAK,EAAE,EAAI,OAAOC,MAAM,EAAE,EAAI,UAGrDC,EAAb,WAEI,aACI,MCzCO,SAAyBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,CDoCkB,SACJ,IAAIX,MAAM,+BACnB,CDhCU,IAAsBU,EAAaE,EAAYC,EC4B9D,OD5BqCH,EC4BrC,ED5B8DG,EC4B9D,qBAMI,SAAcpB,GACV,IAAMqB,EAAMlC,OAAOmC,OAAOP,EAASQ,WAGnC,OAFAF,EAAIrB,IAAMA,EAEHqB,CACV,GAXL,iBA6BI,SAAWG,EAAOC,GACdpB,EAAWmB,GACXnB,EAAWoB,GACX,IAAMC,EAAMvB,EAAAA,aAAkBqB,EAAOC,GACrC,OAAOV,EAASY,OAAOD,EAC1B,KD9D6CP,EC4BlD,iCAaI,WACI,IAAMnB,EAAM4B,KAAK5B,IAGjB,OAFA4B,KAAK5B,IAAM,EAEJA,CACV,GAlBL,kBAoBI,WACI,IAAMA,EAAM4B,KAAKC,qBACjB1B,EAAAA,oBAAyBH,EAC5B,GAvBL,oBAsCI,WACI,IACI,GAAgB,GAAZ4B,KAAK5B,IAAU,MAAM,IAAIO,MAAM,gCACnC,IAAMuB,EAAS3B,EAAAA,iCAAsC,IACrDE,EAAWuB,KAAK5B,KAChBG,EAAAA,gBAAqB2B,EAAQF,KAAK5B,KAClC,IAAI+B,EAAKrB,IAAkBoB,EAAS,EAAI,GACpCE,EAAKtB,IAAkBoB,EAAS,EAAI,GACxC,OAAO/B,EAAmBgC,EAAIC,EAIjC,CAXD,QASI7B,EAAAA,gCAAqC,IACrCA,EAAAA,gBAAqB4B,EAAIC,EAC5B,CACJ,GAnDL,kBAsDI,WACI,GAAgB,GAAZJ,KAAK5B,IAAU,MAAM,IAAIO,MAAM,gCACnCF,EAAWuB,KAAK5B,KAChBG,EAAAA,cAAmByB,KAAK5B,IAC3B,MDrFatB,EAAkBuC,EAAYM,UAAWJ,GACrDC,GAAa1C,EAAkBuC,EAAaG,GAChDjC,OAAOC,eAAe6B,EAAa,YAAa,CAC9C/B,UAAU,ICwBd,KA6DO,SAAS+C,EAAiBC,EAAMC,GACnC,MAAM,IAAI5B,MAAMR,EAAmBmC,EAAMC,GAC5C,C","sources":["../../../node_modules/@babel/runtime/helpers/esm/createClass.js","../../wasm/pkg/index_bg.js","../../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import * as wasm from './index_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n/**\n*/\nexport const Cell = Object.freeze({ Dead:0,\"0\":\"Dead\",Alive:1,\"1\":\"Alive\", });\n/**\n*/\nexport class Universe {\n\n    constructor() {\n        throw new Error('cannot invoke `new` directly');\n    }\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_universe_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        _assertNum(width);\n        _assertNum(height);\n        const ret = wasm.universe_new(width, height);\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    render() {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertNum(this.ptr);\n            wasm.universe_render(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    */\n    tick() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.universe_tick(this.ptr);\n    }\n}\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachedUint8Memory0","Uint8Array","getStringFromWasm0","ptr","len","byteLength","wasm","subarray","_assertNum","n","Error","cachedInt32Memory0","Int32Array","getInt32Memory0","Cell","freeze","Dead","Alive","Universe","instance","Constructor","TypeError","protoProps","staticProps","obj","create","prototype","width","height","ret","__wrap","this","__destroy_into_raw","retptr","r0","r1","__wbindgen_throw","arg0","arg1"],"sourceRoot":""}